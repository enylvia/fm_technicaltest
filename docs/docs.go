// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/employee/absence/log": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mengambil riwayat absensi berdasarkan email dari JWT",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "absence"
                ],
                "summary": "Get Absence History",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        },
        "/employee/clock_in": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Melakukan clock-in (absensi masuk) oleh karyawan berdasarkan lokasi dan waktu",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "absence"
                ],
                "summary": "Clock In Request",
                "parameters": [
                    {
                        "description": "Data absensi masuk (lokasi, waktu, dll.)",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AbsenceClockIn"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        },
        "/employee/clock_out": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Melakukan clock-out (absensi pulang) oleh karyawan berdasarkan lokasi",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "absence"
                ],
                "summary": "Clock Out Request",
                "parameters": [
                    {
                        "description": "Data absensi pulang (lokasi, waktu, dll.)",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AbsenceClockOut"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        },
        "/image/save": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mengunggah gambar berdasarkan jenis dan file",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "image"
                ],
                "summary": "Upload Image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Jenis file (misalnya: avatar, profile, etc)",
                        "name": "jenis",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "File gambar yang akan diunggah",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "description": "Autentikasi user dengan email dan password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authenticate"
                ],
                "summary": "Login User",
                "parameters": [
                    {
                        "description": "Email dan password untuk login",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LoginUserPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "description": "Register User and Employee",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authenticate"
                ],
                "summary": "Register User and Employee",
                "parameters": [
                    {
                        "description": "Request body untuk register",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserandEmployeeRegisterPayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.AbsenceClockIn": {
            "type": "object",
            "properties": {
                "clock_in_photo_url": {
                    "type": "string",
                    "example": "https://example.com/absensi_foto/checkin_john_doe_20250616.jpg"
                },
                "latitude": {
                    "type": "number",
                    "example": -6.2
                },
                "longitude": {
                    "type": "number",
                    "example": 106.816666
                },
                "notes": {
                    "type": "string",
                    "example": "optional"
                }
            }
        },
        "models.AbsenceClockOut": {
            "type": "object",
            "properties": {
                "clock_in_photo_url": {
                    "type": "string",
                    "example": "https://example.com/absensi_foto/checkin_john_doe_20250616.jpg"
                },
                "id": {
                    "type": "integer"
                },
                "latitude": {
                    "type": "number",
                    "example": -6.2
                },
                "longitude": {
                    "type": "number",
                    "example": 106.816666
                }
            }
        },
        "models.LoginUserPayload": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "StrongPassword123!"
                }
            }
        },
        "models.Response": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "models.UserandEmployeeRegisterPayload": {
            "type": "object",
            "required": [
                "company_id",
                "date_of_birth",
                "department_id",
                "email",
                "full_name",
                "nik",
                "password",
                "phone_number",
                "position_id"
            ],
            "properties": {
                "address": {
                    "type": "string",
                    "example": "Jl. Merdeka No. 10, Jakarta"
                },
                "company_id": {
                    "type": "integer",
                    "example": 1
                },
                "date_of_birth": {
                    "type": "string",
                    "example": "1990-05-15"
                },
                "department_id": {
                    "type": "integer",
                    "example": 1
                },
                "email": {
                    "type": "string",
                    "example": "john.doe@example.com"
                },
                "full_name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "joined_date": {
                    "type": "string",
                    "example": "2023-01-20"
                },
                "late_tolerance": {
                    "type": "integer",
                    "example": 15
                },
                "nik": {
                    "type": "string",
                    "example": "123456789012345"
                },
                "password": {
                    "type": "string",
                    "example": "StrongPassword123!"
                },
                "phone_number": {
                    "type": "string",
                    "example": "081234567890"
                },
                "position_id": {
                    "type": "integer",
                    "example": 1
                },
                "profile_picture_url": {
                    "type": "string",
                    "example": "https://example.com/images/john_doe_profile.jpg"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Masukkan token JWT kamu dengan format: Bearer \u003ctoken\u003e",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:50001",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "FM Technical Test API",
	Description:      "Dokumentasi API untuk FM Technical Test",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
